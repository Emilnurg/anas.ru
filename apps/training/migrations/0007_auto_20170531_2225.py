# -*- coding: utf-8 -*-
# flake8: noqa
# Generated by Django 1.10.7 on 2017-05-31 19:25
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('training', '0006_auto_20170529_2311'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('ordering', models.IntegerField(db_index=True, default=0, verbose_name='Порядок')),
                ('status', models.SmallIntegerField(choices=[(0, 'Черновик'), (1, 'Публичный'), (2, 'Скрытый')], default=1, verbose_name='Статус')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Заголовок')),
                ('title_ru', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('title_fr', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Заголовок')),
                ('slug', models.SlugField(help_text='Разрешены только латинские символы, цифры, символ подчеркивания и дефис (минус)', max_length=150, unique=True, verbose_name='Алиас')),
            ],
            options={
                'verbose_name_plural': 'Категории курсов',
                'verbose_name': 'Категория курсов',
            },
        ),
        migrations.AlterField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(blank=True, through='training.CourseTeacher', to='training.Teacher', verbose_name='Преподаватели'),
        ),
        migrations.AddField(
            model_name='course',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='courses', to='training.TrainingCategory', verbose_name='Категории'),
        ),
    ]
